%{
#include <string>
#include "parser.h" /* Generated by Bison */

extern int yylineno;
void yyerror(const char* s, ...);
%}

%option noyywrap nodefault yylineno

digs -?[0-9]+|-?[0-9]*"."[0-9]+
exp [Ee][-+]{digs}
num {digs}{exp}?

%%

[ \t]               ; //ignores spaces
{num}i              {yytext[yyleng-1] = '\0';
                     yylval.value = std::atof(yytext); return T_IMAGINARY;}
{num}               {yylval.value = std::atof(yytext); return T_REAL;}
"+"                 {return T_PLUS;} /*special character with " "*/
"-"                 {return T_MINUS;} /*special character with " "*/
\n                  {return T_NL;}
.                   {yyerror("Unknown token! %c\n", *yytext);} /*complains about every unknown character*/

%%

void yyerror(const char *s, ...){
    va_list ap;
    va_start(ap, s);
    std::fprintf(stderr, "Line %d: error: ", yylineno);
    std::vfprintf(stderr, s, ap);
}
